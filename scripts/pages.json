[{"name":"Any()","description":"au.id.micolous.kotlin.pcsc.Protocol.Any","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/-any/index.html","searchKeys":["Any","Any()","au.id.micolous.kotlin.pcsc.Protocol.Any"]},{"name":"Communications(2)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.Communications","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-communications/index.html","searchKeys":["Communications","Communications(2)","au.id.micolous.kotlin.pcsc.AttributeClass.Communications"]},{"name":"Direct()","description":"au.id.micolous.kotlin.pcsc.ShareMode.Direct","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-share-mode/-direct/index.html","searchKeys":["Direct","Direct()","au.id.micolous.kotlin.pcsc.ShareMode.Direct"]},{"name":"E_BAD_SEEK(0x80100029L, \"There was an error trying to set the smart card file object pointer\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_BAD_SEEK","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-b-a-d_-s-e-e-k/index.html","searchKeys":["E_BAD_SEEK","E_BAD_SEEK(0x80100029L, \"There was an error trying to set the smart card file object pointer\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_BAD_SEEK"]},{"name":"E_CANCELLED(0x80100002L, \"The action was cancelled by an SCardCancel request\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CANCELLED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-c-a-n-c-e-l-l-e-d/index.html","searchKeys":["E_CANCELLED","E_CANCELLED(0x80100002L, \"The action was cancelled by an SCardCancel request\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CANCELLED"]},{"name":"E_CANT_DISPOSE(0x8010000EL, \"The system could not dispose of the media in the requested manner\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CANT_DISPOSE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-c-a-n-t_-d-i-s-p-o-s-e/index.html","searchKeys":["E_CANT_DISPOSE","E_CANT_DISPOSE(0x8010000EL, \"The system could not dispose of the media in the requested manner\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CANT_DISPOSE"]},{"name":"E_CARD_UNSUPPORTED(0x8010001CL, \"The smart card does not meet minimal requirements for support\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CARD_UNSUPPORTED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-c-a-r-d_-u-n-s-u-p-p-o-r-t-e-d/index.html","searchKeys":["E_CARD_UNSUPPORTED","E_CARD_UNSUPPORTED(0x8010001CL, \"The smart card does not meet minimal requirements for support\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CARD_UNSUPPORTED"]},{"name":"E_CERTIFICATE_UNAVAILABLE(0x8010002DL, \"The requested certificate could not be obtained\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CERTIFICATE_UNAVAILABLE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-c-e-r-t-i-f-i-c-a-t-e_-u-n-a-v-a-i-l-a-b-l-e/index.html","searchKeys":["E_CERTIFICATE_UNAVAILABLE","E_CERTIFICATE_UNAVAILABLE(0x8010002DL, \"The requested certificate could not be obtained\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_CERTIFICATE_UNAVAILABLE"]},{"name":"E_COMM_DATA_LOST(0x8010002FL, \"A communications error with the smart card has been detected. More..\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_COMM_DATA_LOST","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-c-o-m-m_-d-a-t-a_-l-o-s-t/index.html","searchKeys":["E_COMM_DATA_LOST","E_COMM_DATA_LOST(0x8010002FL, \"A communications error with the smart card has been detected. More..\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_COMM_DATA_LOST"]},{"name":"E_DIR_NOT_FOUND(0x80100023L, \"The identified directory does not exist in the smart card\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_DIR_NOT_FOUND","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-d-i-r_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["E_DIR_NOT_FOUND","E_DIR_NOT_FOUND(0x80100023L, \"The identified directory does not exist in the smart card\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_DIR_NOT_FOUND"]},{"name":"E_DUPLICATE_READER(0x8010001BL, \"The reader driver did not produce a unique reader name\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_DUPLICATE_READER","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-d-u-p-l-i-c-a-t-e_-r-e-a-d-e-r/index.html","searchKeys":["E_DUPLICATE_READER","E_DUPLICATE_READER(0x8010001BL, \"The reader driver did not produce a unique reader name\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_DUPLICATE_READER"]},{"name":"E_FILE_NOT_FOUND(0x80100024L, \"The identified file does not exist in the smart card\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_FILE_NOT_FOUND","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-f-i-l-e_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["E_FILE_NOT_FOUND","E_FILE_NOT_FOUND(0x80100024L, \"The identified file does not exist in the smart card\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_FILE_NOT_FOUND"]},{"name":"E_ICC_CREATEORDER(0x80100021L, \"The requested order of object creation is not supported\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_ICC_CREATEORDER","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-c-c_-c-r-e-a-t-e-o-r-d-e-r/index.html","searchKeys":["E_ICC_CREATEORDER","E_ICC_CREATEORDER(0x80100021L, \"The requested order of object creation is not supported\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_ICC_CREATEORDER"]},{"name":"E_ICC_INSTALLATION(0x80100020L, \"No primary provider can be found for the smart card\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_ICC_INSTALLATION","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-c-c_-i-n-s-t-a-l-l-a-t-i-o-n/index.html","searchKeys":["E_ICC_INSTALLATION","E_ICC_INSTALLATION(0x80100020L, \"No primary provider can be found for the smart card\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_ICC_INSTALLATION"]},{"name":"E_INSUFFICIENT_BUFFER(0x80100008L, \"The data buffer to receive returned data is too small for the returned data\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INSUFFICIENT_BUFFER","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-n-s-u-f-f-i-c-i-e-n-t_-b-u-f-f-e-r/index.html","searchKeys":["E_INSUFFICIENT_BUFFER","E_INSUFFICIENT_BUFFER(0x80100008L, \"The data buffer to receive returned data is too small for the returned data\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INSUFFICIENT_BUFFER"]},{"name":"E_INVALID_ATR(0x80100015L, \"An ATR obtained from the registry is not a valid ATR string\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_ATR","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-n-v-a-l-i-d_-a-t-r/index.html","searchKeys":["E_INVALID_ATR","E_INVALID_ATR(0x80100015L, \"An ATR obtained from the registry is not a valid ATR string\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_ATR"]},{"name":"E_INVALID_CHV(0x8010002AL, \"The supplied PIN is incorrect\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_CHV","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-n-v-a-l-i-d_-c-h-v/index.html","searchKeys":["E_INVALID_CHV","E_INVALID_CHV(0x8010002AL, \"The supplied PIN is incorrect\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_CHV"]},{"name":"E_INVALID_HANDLE(0x80100003L, \"The supplied handle was invalid\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_HANDLE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-n-v-a-l-i-d_-h-a-n-d-l-e/index.html","searchKeys":["E_INVALID_HANDLE","E_INVALID_HANDLE(0x80100003L, \"The supplied handle was invalid\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_HANDLE"]},{"name":"E_INVALID_PARAMETER(0x80100004L, \"One or more of the supplied parameters could not be properly interpreted\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_PARAMETER","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-n-v-a-l-i-d_-p-a-r-a-m-e-t-e-r/index.html","searchKeys":["E_INVALID_PARAMETER","E_INVALID_PARAMETER(0x80100004L, \"One or more of the supplied parameters could not be properly interpreted\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_PARAMETER"]},{"name":"E_INVALID_TARGET(0x80100005L, \"Registry startup information is missing or invalid\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_TARGET","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-n-v-a-l-i-d_-t-a-r-g-e-t/index.html","searchKeys":["E_INVALID_TARGET","E_INVALID_TARGET(0x80100005L, \"Registry startup information is missing or invalid\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_TARGET"]},{"name":"E_INVALID_VALUE(0x80100011L, \"One or more of the supplied parameters values could not be properly interpreted\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_VALUE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-i-n-v-a-l-i-d_-v-a-l-u-e/index.html","searchKeys":["E_INVALID_VALUE","E_INVALID_VALUE(0x80100011L, \"One or more of the supplied parameters values could not be properly interpreted\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_INVALID_VALUE"]},{"name":"E_NOT_READY(0x80100010L, \"The reader or smart card is not ready to accept commands\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NOT_READY","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o-t_-r-e-a-d-y/index.html","searchKeys":["E_NOT_READY","E_NOT_READY(0x80100010L, \"The reader or smart card is not ready to accept commands\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NOT_READY"]},{"name":"E_NOT_TRANSACTED(0x80100016L, \"An attempt was made to end a non-existent transaction\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NOT_TRANSACTED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o-t_-t-r-a-n-s-a-c-t-e-d/index.html","searchKeys":["E_NOT_TRANSACTED","E_NOT_TRANSACTED(0x80100016L, \"An attempt was made to end a non-existent transaction\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NOT_TRANSACTED"]},{"name":"E_NO_ACCESS(0x80100027L, \"Access is denied to this file\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_ACCESS","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-a-c-c-e-s-s/index.html","searchKeys":["E_NO_ACCESS","E_NO_ACCESS(0x80100027L, \"Access is denied to this file\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_ACCESS"]},{"name":"E_NO_DIR(0x80100025L, \"The supplied path does not represent a smart card directory\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_DIR","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-d-i-r/index.html","searchKeys":["E_NO_DIR","E_NO_DIR(0x80100025L, \"The supplied path does not represent a smart card directory\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_DIR"]},{"name":"E_NO_FILE(0x80100026L, \"The supplied path does not represent a smart card file\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_FILE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-f-i-l-e/index.html","searchKeys":["E_NO_FILE","E_NO_FILE(0x80100026L, \"The supplied path does not represent a smart card file\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_FILE"]},{"name":"E_NO_KEY_CONTAINER(0x80100030L, \"The requested key container does not exist on the smart card\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_KEY_CONTAINER","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-k-e-y_-c-o-n-t-a-i-n-e-r/index.html","searchKeys":["E_NO_KEY_CONTAINER","E_NO_KEY_CONTAINER(0x80100030L, \"The requested key container does not exist on the smart card\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_KEY_CONTAINER"]},{"name":"E_NO_MEMORY(0x80100006L, \"Not enough memory available to complete this command\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_MEMORY","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-m-e-m-o-r-y/index.html","searchKeys":["E_NO_MEMORY","E_NO_MEMORY(0x80100006L, \"Not enough memory available to complete this command\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_MEMORY"]},{"name":"E_NO_READERS_AVAILABLE(0x8010002EL, \"Cannot find a smart card reader\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_READERS_AVAILABLE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-r-e-a-d-e-r-s_-a-v-a-i-l-a-b-l-e/index.html","searchKeys":["E_NO_READERS_AVAILABLE","E_NO_READERS_AVAILABLE(0x8010002EL, \"Cannot find a smart card reader\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_READERS_AVAILABLE"]},{"name":"E_NO_SERVICE(0x8010001DL, \"The Smart card resource manager is not running\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_SERVICE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-s-e-r-v-i-c-e/index.html","searchKeys":["E_NO_SERVICE","E_NO_SERVICE(0x8010001DL, \"The Smart card resource manager is not running\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_SERVICE"]},{"name":"E_NO_SMARTCARD(0x8010000CL, \"The operation requires a Smart Card, but no Smart Card is currently in the device\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_SMARTCARD","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-s-m-a-r-t-c-a-r-d/index.html","searchKeys":["E_NO_SMARTCARD","E_NO_SMARTCARD(0x8010000CL, \"The operation requires a Smart Card, but no Smart Card is currently in the device\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_SMARTCARD"]},{"name":"E_NO_SUCH_CERTIFICATE(0x8010002CL, \"The requested certificate does not exist\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_SUCH_CERTIFICATE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-n-o_-s-u-c-h_-c-e-r-t-i-f-i-c-a-t-e/index.html","searchKeys":["E_NO_SUCH_CERTIFICATE","E_NO_SUCH_CERTIFICATE(0x8010002CL, \"The requested certificate does not exist\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_NO_SUCH_CERTIFICATE"]},{"name":"E_PCI_TOO_SMALL(0x80100019L, \"The PCI Receive buffer was too small\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_PCI_TOO_SMALL","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-p-c-i_-t-o-o_-s-m-a-l-l/index.html","searchKeys":["E_PCI_TOO_SMALL","E_PCI_TOO_SMALL(0x80100019L, \"The PCI Receive buffer was too small\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_PCI_TOO_SMALL"]},{"name":"E_PROTO_MISMATCH(0x8010000FL, \"The requested protocols are incompatible with the protocol currently in use with the smart card\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_PROTO_MISMATCH","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-p-r-o-t-o_-m-i-s-m-a-t-c-h/index.html","searchKeys":["E_PROTO_MISMATCH","E_PROTO_MISMATCH(0x8010000FL, \"The requested protocols are incompatible with the protocol currently in use with the smart card\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_PROTO_MISMATCH"]},{"name":"E_READER_UNAVAILABLE(0x80100017L, \"The specified reader is not currently available for use\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_READER_UNAVAILABLE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-r-e-a-d-e-r_-u-n-a-v-a-i-l-a-b-l-e/index.html","searchKeys":["E_READER_UNAVAILABLE","E_READER_UNAVAILABLE(0x80100017L, \"The specified reader is not currently available for use\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_READER_UNAVAILABLE"]},{"name":"E_READER_UNSUPPORTED(0x8010001AL, \"The reader driver does not meet minimal requirements for support\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_READER_UNSUPPORTED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-r-e-a-d-e-r_-u-n-s-u-p-p-o-r-t-e-d/index.html","searchKeys":["E_READER_UNSUPPORTED","E_READER_UNSUPPORTED(0x8010001AL, \"The reader driver does not meet minimal requirements for support\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_READER_UNSUPPORTED"]},{"name":"E_SERVER_TOO_BUSY(0x80100031L, \"The Smart Card Resource Manager is too busy to complete this operation\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SERVER_TOO_BUSY","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-s-e-r-v-e-r_-t-o-o_-b-u-s-y/index.html","searchKeys":["E_SERVER_TOO_BUSY","E_SERVER_TOO_BUSY(0x80100031L, \"The Smart Card Resource Manager is too busy to complete this operation\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SERVER_TOO_BUSY"]},{"name":"E_SERVICE_STOPPED(0x8010001EL, \"The Smart card resource manager has shut down\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SERVICE_STOPPED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-s-e-r-v-i-c-e_-s-t-o-p-p-e-d/index.html","searchKeys":["E_SERVICE_STOPPED","E_SERVICE_STOPPED(0x8010001EL, \"The Smart card resource manager has shut down\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SERVICE_STOPPED"]},{"name":"E_SHARING_VIOLATION(0x8010000BL, \"The smart card cannot be accessed because of other connections outstanding\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SHARING_VIOLATION","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-s-h-a-r-i-n-g_-v-i-o-l-a-t-i-o-n/index.html","searchKeys":["E_SHARING_VIOLATION","E_SHARING_VIOLATION(0x8010000BL, \"The smart card cannot be accessed because of other connections outstanding\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SHARING_VIOLATION"]},{"name":"E_SYSTEM_CANCELLED(0x80100012L, \"The action was cancelled by the system, presumably to log off or shut down\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SYSTEM_CANCELLED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-s-y-s-t-e-m_-c-a-n-c-e-l-l-e-d/index.html","searchKeys":["E_SYSTEM_CANCELLED","E_SYSTEM_CANCELLED(0x80100012L, \"The action was cancelled by the system, presumably to log off or shut down\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_SYSTEM_CANCELLED"]},{"name":"E_TIMEOUT(0x8010000AL, \"The user-specified timeout value has expired\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_TIMEOUT","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-t-i-m-e-o-u-t/index.html","searchKeys":["E_TIMEOUT","E_TIMEOUT(0x8010000AL, \"The user-specified timeout value has expired\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_TIMEOUT"]},{"name":"E_UNEXPECTED(0x8010001FL, \"An unexpected card error has occurred\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNEXPECTED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-u-n-e-x-p-e-c-t-e-d/index.html","searchKeys":["E_UNEXPECTED","E_UNEXPECTED(0x8010001FL, \"An unexpected card error has occurred\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNEXPECTED"]},{"name":"E_UNKNOWN_CARD(0x8010000DL, \"The specified smart card name is not recognized\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNKNOWN_CARD","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-u-n-k-n-o-w-n_-c-a-r-d/index.html","searchKeys":["E_UNKNOWN_CARD","E_UNKNOWN_CARD(0x8010000DL, \"The specified smart card name is not recognized\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNKNOWN_CARD"]},{"name":"E_UNKNOWN_READER(0x80100009L, \"The specified reader name is not recognized\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNKNOWN_READER","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-u-n-k-n-o-w-n_-r-e-a-d-e-r/index.html","searchKeys":["E_UNKNOWN_READER","E_UNKNOWN_READER(0x80100009L, \"The specified reader name is not recognized\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNKNOWN_READER"]},{"name":"E_UNKNOWN_RES_MNG(0x8010002BL, \"An unrecognized error code was returned from a layered component\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNKNOWN_RES_MNG","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-u-n-k-n-o-w-n_-r-e-s_-m-n-g/index.html","searchKeys":["E_UNKNOWN_RES_MNG","E_UNKNOWN_RES_MNG(0x8010002BL, \"An unrecognized error code was returned from a layered component\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNKNOWN_RES_MNG"]},{"name":"E_UNSUPPORTED_FEATURE(0x8010001FL, \"This smart card does not support the requested feature\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNSUPPORTED_FEATURE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-u-n-s-u-p-p-o-r-t-e-d_-f-e-a-t-u-r-e/index.html","searchKeys":["E_UNSUPPORTED_FEATURE","E_UNSUPPORTED_FEATURE(0x8010001FL, \"This smart card does not support the requested feature\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_UNSUPPORTED_FEATURE"]},{"name":"E_WRITE_TOO_MANY(0x80100028L, \"The smart card does not have enough memory to store the information\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_WRITE_TOO_MANY","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-e_-w-r-i-t-e_-t-o-o_-m-a-n-y/index.html","searchKeys":["E_WRITE_TOO_MANY","E_WRITE_TOO_MANY(0x80100028L, \"The smart card does not have enough memory to store the information\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.E_WRITE_TOO_MANY"]},{"name":"Eject()","description":"au.id.micolous.kotlin.pcsc.DisconnectDisposition.Eject","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-disconnect-disposition/-eject/index.html","searchKeys":["Eject","Eject()","au.id.micolous.kotlin.pcsc.DisconnectDisposition.Eject"]},{"name":"Exclusive()","description":"au.id.micolous.kotlin.pcsc.ShareMode.Exclusive","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-share-mode/-exclusive/index.html","searchKeys":["Exclusive","Exclusive()","au.id.micolous.kotlin.pcsc.ShareMode.Exclusive"]},{"name":"F_COMM_ERROR(0x80100013L, \"An internal communications error has been detected\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_COMM_ERROR","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-f_-c-o-m-m_-e-r-r-o-r/index.html","searchKeys":["F_COMM_ERROR","F_COMM_ERROR(0x80100013L, \"An internal communications error has been detected\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_COMM_ERROR"]},{"name":"F_INTERNAL_ERROR(0x80100001L, \"An internal consistency check failed\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_INTERNAL_ERROR","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-f_-i-n-t-e-r-n-a-l_-e-r-r-o-r/index.html","searchKeys":["F_INTERNAL_ERROR","F_INTERNAL_ERROR(0x80100001L, \"An internal consistency check failed\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_INTERNAL_ERROR"]},{"name":"F_UNKNOWN_ERROR(0x80100014L, \"An internal error has been detected, but the source is unknown\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_UNKNOWN_ERROR","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-f_-u-n-k-n-o-w-n_-e-r-r-o-r/index.html","searchKeys":["F_UNKNOWN_ERROR","F_UNKNOWN_ERROR(0x80100014L, \"An internal error has been detected, but the source is unknown\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_UNKNOWN_ERROR"]},{"name":"F_WAITED_TOO_LONG(0x80100007L, \"An internal consistency timer has expired\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_WAITED_TOO_LONG","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-f_-w-a-i-t-e-d_-t-o-o_-l-o-n-g/index.html","searchKeys":["F_WAITED_TOO_LONG","F_WAITED_TOO_LONG(0x80100007L, \"An internal consistency timer has expired\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.F_WAITED_TOO_LONG"]},{"name":"ICCState(9)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.ICCState","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-i-c-c-state/index.html","searchKeys":["ICCState","ICCState(9)","au.id.micolous.kotlin.pcsc.AttributeClass.ICCState"]},{"name":"IFDProtocol(8)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.IFDProtocol","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-i-f-d-protocol/index.html","searchKeys":["IFDProtocol","IFDProtocol(8)","au.id.micolous.kotlin.pcsc.AttributeClass.IFDProtocol"]},{"name":"Leave()","description":"au.id.micolous.kotlin.pcsc.DisconnectDisposition.Leave","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-disconnect-disposition/-leave/index.html","searchKeys":["Leave","Leave()","au.id.micolous.kotlin.pcsc.DisconnectDisposition.Leave"]},{"name":"Leave()","description":"au.id.micolous.kotlin.pcsc.Initialization.Leave","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-initialization/-leave/index.html","searchKeys":["Leave","Leave()","au.id.micolous.kotlin.pcsc.Initialization.Leave"]},{"name":"Mechanical(6)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.Mechanical","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-mechanical/index.html","searchKeys":["Mechanical","Mechanical(6)","au.id.micolous.kotlin.pcsc.AttributeClass.Mechanical"]},{"name":"MechanicalCharacteristics(AttributeClass.Mechanical, 0x0150)","description":"au.id.micolous.kotlin.pcsc.Attribute.MechanicalCharacteristics","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/-mechanical-characteristics/index.html","searchKeys":["MechanicalCharacteristics","MechanicalCharacteristics(AttributeClass.Mechanical, 0x0150)","au.id.micolous.kotlin.pcsc.Attribute.MechanicalCharacteristics"]},{"name":"P_SHUTDOWN(0x80100018L, \"The operation has been aborted to allow the server application to exit\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.P_SHUTDOWN","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-p_-s-h-u-t-d-o-w-n/index.html","searchKeys":["P_SHUTDOWN","P_SHUTDOWN(0x80100018L, \"The operation has been aborted to allow the server application to exit\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.P_SHUTDOWN"]},{"name":"Perf(0x7ffe)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.Perf","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-perf/index.html","searchKeys":["Perf","Perf(0x7ffe)","au.id.micolous.kotlin.pcsc.AttributeClass.Perf"]},{"name":"PowerManagement(4)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.PowerManagement","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-power-management/index.html","searchKeys":["PowerManagement","PowerManagement(4)","au.id.micolous.kotlin.pcsc.AttributeClass.PowerManagement"]},{"name":"Protocol(3)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.Protocol","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-protocol/index.html","searchKeys":["Protocol","Protocol(3)","au.id.micolous.kotlin.pcsc.AttributeClass.Protocol"]},{"name":"Raw()","description":"au.id.micolous.kotlin.pcsc.Protocol.Raw","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/-raw/index.html","searchKeys":["Raw","Raw()","au.id.micolous.kotlin.pcsc.Protocol.Raw"]},{"name":"Reset()","description":"au.id.micolous.kotlin.pcsc.DisconnectDisposition.Reset","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-disconnect-disposition/-reset/index.html","searchKeys":["Reset","Reset()","au.id.micolous.kotlin.pcsc.DisconnectDisposition.Reset"]},{"name":"Reset()","description":"au.id.micolous.kotlin.pcsc.Initialization.Reset","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-initialization/-reset/index.html","searchKeys":["Reset","Reset()","au.id.micolous.kotlin.pcsc.Initialization.Reset"]},{"name":"S_SUCCESS(0x00000000L, \"No error was encountered\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.S_SUCCESS","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-s_-s-u-c-c-e-s-s/index.html","searchKeys":["S_SUCCESS","S_SUCCESS(0x00000000L, \"No error was encountered\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.S_SUCCESS"]},{"name":"Security(5)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.Security","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-security/index.html","searchKeys":["Security","Security(5)","au.id.micolous.kotlin.pcsc.AttributeClass.Security"]},{"name":"Shared()","description":"au.id.micolous.kotlin.pcsc.ShareMode.Shared","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-share-mode/-shared/index.html","searchKeys":["Shared","Shared()","au.id.micolous.kotlin.pcsc.ShareMode.Shared"]},{"name":"System()","description":"au.id.micolous.kotlin.pcsc.Scope.System","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-scope/-system/index.html","searchKeys":["System","System()","au.id.micolous.kotlin.pcsc.Scope.System"]},{"name":"System(0x7fff)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.System","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-system/index.html","searchKeys":["System","System(0x7fff)","au.id.micolous.kotlin.pcsc.AttributeClass.System"]},{"name":"T0()","description":"au.id.micolous.kotlin.pcsc.Protocol.T0","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/-t0/index.html","searchKeys":["T0","T0()","au.id.micolous.kotlin.pcsc.Protocol.T0"]},{"name":"T1()","description":"au.id.micolous.kotlin.pcsc.Protocol.T1","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/-t1/index.html","searchKeys":["T1","T1()","au.id.micolous.kotlin.pcsc.Protocol.T1"]},{"name":"T15()","description":"au.id.micolous.kotlin.pcsc.Protocol.T15","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/-t15/index.html","searchKeys":["T15","T15()","au.id.micolous.kotlin.pcsc.Protocol.T15"]},{"name":"Terminal()","description":"au.id.micolous.kotlin.pcsc.Scope.Terminal","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-scope/-terminal/index.html","searchKeys":["Terminal","Terminal()","au.id.micolous.kotlin.pcsc.Scope.Terminal"]},{"name":"Undefined()","description":"au.id.micolous.kotlin.pcsc.Protocol.Undefined","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/-undefined/index.html","searchKeys":["Undefined","Undefined()","au.id.micolous.kotlin.pcsc.Protocol.Undefined"]},{"name":"Unpower()","description":"au.id.micolous.kotlin.pcsc.DisconnectDisposition.Unpower","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-disconnect-disposition/-unpower/index.html","searchKeys":["Unpower","Unpower()","au.id.micolous.kotlin.pcsc.DisconnectDisposition.Unpower"]},{"name":"Unpower()","description":"au.id.micolous.kotlin.pcsc.Initialization.Unpower","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-initialization/-unpower/index.html","searchKeys":["Unpower","Unpower()","au.id.micolous.kotlin.pcsc.Initialization.Unpower"]},{"name":"Unset()","description":"au.id.micolous.kotlin.pcsc.Protocol.Unset","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/-unset/index.html","searchKeys":["Unset","Unset()","au.id.micolous.kotlin.pcsc.Protocol.Unset"]},{"name":"User()","description":"au.id.micolous.kotlin.pcsc.Scope.User","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-scope/-user/index.html","searchKeys":["User","User()","au.id.micolous.kotlin.pcsc.Scope.User"]},{"name":"VendorDefined(7)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.VendorDefined","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-vendor-defined/index.html","searchKeys":["VendorDefined","VendorDefined(7)","au.id.micolous.kotlin.pcsc.AttributeClass.VendorDefined"]},{"name":"VendorIfdSerial(AttributeClass.VendorInfo, 0x0103)","description":"au.id.micolous.kotlin.pcsc.Attribute.VendorIfdSerial","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/-vendor-ifd-serial/index.html","searchKeys":["VendorIfdSerial","VendorIfdSerial(AttributeClass.VendorInfo, 0x0103)","au.id.micolous.kotlin.pcsc.Attribute.VendorIfdSerial"]},{"name":"VendorIfdType(AttributeClass.VendorInfo, 0x0101)","description":"au.id.micolous.kotlin.pcsc.Attribute.VendorIfdType","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/-vendor-ifd-type/index.html","searchKeys":["VendorIfdType","VendorIfdType(AttributeClass.VendorInfo, 0x0101)","au.id.micolous.kotlin.pcsc.Attribute.VendorIfdType"]},{"name":"VendorIfdVersion(AttributeClass.VendorInfo, 0x0102)","description":"au.id.micolous.kotlin.pcsc.Attribute.VendorIfdVersion","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/-vendor-ifd-version/index.html","searchKeys":["VendorIfdVersion","VendorIfdVersion(AttributeClass.VendorInfo, 0x0102)","au.id.micolous.kotlin.pcsc.Attribute.VendorIfdVersion"]},{"name":"VendorInfo(1)","description":"au.id.micolous.kotlin.pcsc.AttributeClass.VendorInfo","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/-vendor-info/index.html","searchKeys":["VendorInfo","VendorInfo(1)","au.id.micolous.kotlin.pcsc.AttributeClass.VendorInfo"]},{"name":"VendorName(AttributeClass.VendorInfo, 0x0100)","description":"au.id.micolous.kotlin.pcsc.Attribute.VendorName","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/-vendor-name/index.html","searchKeys":["VendorName","VendorName(AttributeClass.VendorInfo, 0x0100)","au.id.micolous.kotlin.pcsc.Attribute.VendorName"]},{"name":"W_CANCELLED_BY_USER(0x8010006EL, \"The user pressed \\\"Cancel\\\" on a Smart Card Selection Dialog\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_CANCELLED_BY_USER","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-c-a-n-c-e-l-l-e-d_-b-y_-u-s-e-r/index.html","searchKeys":["W_CANCELLED_BY_USER","W_CANCELLED_BY_USER(0x8010006EL, \"The user pressed \\\"Cancel\\\" on a Smart Card Selection Dialog\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_CANCELLED_BY_USER"]},{"name":"W_CARD_NOT_AUTHENTICATED(0x8010006FL, \"No PIN was presented to the smart card\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_CARD_NOT_AUTHENTICATED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-c-a-r-d_-n-o-t_-a-u-t-h-e-n-t-i-c-a-t-e-d/index.html","searchKeys":["W_CARD_NOT_AUTHENTICATED","W_CARD_NOT_AUTHENTICATED(0x8010006FL, \"No PIN was presented to the smart card\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_CARD_NOT_AUTHENTICATED"]},{"name":"W_CHV_BLOCKED(0x8010006CL, \"The card cannot be accessed because the maximum number of PIN entry attempts has been reached\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_CHV_BLOCKED","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-c-h-v_-b-l-o-c-k-e-d/index.html","searchKeys":["W_CHV_BLOCKED","W_CHV_BLOCKED(0x8010006CL, \"The card cannot be accessed because the maximum number of PIN entry attempts has been reached\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_CHV_BLOCKED"]},{"name":"W_EOF(0x8010006DL, \"The end of the smart card file has been reached\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_EOF","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-e-o-f/index.html","searchKeys":["W_EOF","W_EOF(0x8010006DL, \"The end of the smart card file has been reached\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_EOF"]},{"name":"W_REMOVED_CARD(0x80100069L, \"The smart card has been removed, so further communication is not possible\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_REMOVED_CARD","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-r-e-m-o-v-e-d_-c-a-r-d/index.html","searchKeys":["W_REMOVED_CARD","W_REMOVED_CARD(0x80100069L, \"The smart card has been removed, so further communication is not possible\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_REMOVED_CARD"]},{"name":"W_RESET_CARD(0x80100068L, \"The smart card has been reset, so any shared state information is invalid\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_RESET_CARD","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-r-e-s-e-t_-c-a-r-d/index.html","searchKeys":["W_RESET_CARD","W_RESET_CARD(0x80100068L, \"The smart card has been reset, so any shared state information is invalid\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_RESET_CARD"]},{"name":"W_SECURITY_VIOLATION(0x8010006AL, \"Access was denied because of a security violation\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_SECURITY_VIOLATION","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-s-e-c-u-r-i-t-y_-v-i-o-l-a-t-i-o-n/index.html","searchKeys":["W_SECURITY_VIOLATION","W_SECURITY_VIOLATION(0x8010006AL, \"Access was denied because of a security violation\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_SECURITY_VIOLATION"]},{"name":"W_UNPOWERED_CARD(0x80100067L, \"Power has been removed from the smart card, so that further communication is not possible\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_UNPOWERED_CARD","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-u-n-p-o-w-e-r-e-d_-c-a-r-d/index.html","searchKeys":["W_UNPOWERED_CARD","W_UNPOWERED_CARD(0x80100067L, \"Power has been removed from the smart card, so that further communication is not possible\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_UNPOWERED_CARD"]},{"name":"W_UNRESPONSIVE_CARD(0x80100066L, \"The smart card is not responding to a reset\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_UNRESPONSIVE_CARD","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-u-n-r-e-s-p-o-n-s-i-v-e_-c-a-r-d/index.html","searchKeys":["W_UNRESPONSIVE_CARD","W_UNRESPONSIVE_CARD(0x80100066L, \"The smart card is not responding to a reset\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_UNRESPONSIVE_CARD"]},{"name":"W_UNSUPPORTED_CARD(0x80100065L, \"The reader cannot communicate with the card, due to ATR string configuration conflicts\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_UNSUPPORTED_CARD","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-u-n-s-u-p-p-o-r-t-e-d_-c-a-r-d/index.html","searchKeys":["W_UNSUPPORTED_CARD","W_UNSUPPORTED_CARD(0x80100065L, \"The reader cannot communicate with the card, due to ATR string configuration conflicts\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_UNSUPPORTED_CARD"]},{"name":"W_WRONG_CHV(0x8010006BL, \"The card cannot be accessed because the wrong PIN was presented\")","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_WRONG_CHV","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/-w_-w-r-o-n-g_-c-h-v/index.html","searchKeys":["W_WRONG_CHV","W_WRONG_CHV(0x8010006BL, \"The card cannot be accessed because the wrong PIN was presented\")","au.id.micolous.kotlin.pcsc.PCSCErrorCode.W_WRONG_CHV"]},{"name":"class Card","description":"au.id.micolous.kotlin.pcsc.Card","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/index.html","searchKeys":["Card","class Card","au.id.micolous.kotlin.pcsc.Card"]},{"name":"class Context","description":"au.id.micolous.kotlin.pcsc.Context","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/index.html","searchKeys":["Context","class Context","au.id.micolous.kotlin.pcsc.Context"]},{"name":"const val LONG_TIMEOUT: Int","description":"au.id.micolous.kotlin.pcsc.LONG_TIMEOUT","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-l-o-n-g_-t-i-m-e-o-u-t.html","searchKeys":["LONG_TIMEOUT","const val LONG_TIMEOUT: Int","au.id.micolous.kotlin.pcsc.LONG_TIMEOUT"]},{"name":"data class CardStatus","description":"au.id.micolous.kotlin.pcsc.CardStatus","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/index.html","searchKeys":["CardStatus","data class CardStatus","au.id.micolous.kotlin.pcsc.CardStatus"]},{"name":"data class MechanicalCharacteristics","description":"au.id.micolous.kotlin.pcsc.MechanicalCharacteristics","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-mechanical-characteristics/index.html","searchKeys":["MechanicalCharacteristics","data class MechanicalCharacteristics","au.id.micolous.kotlin.pcsc.MechanicalCharacteristics"]},{"name":"data class PCSCError : Throwable","description":"au.id.micolous.kotlin.pcsc.PCSCError","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error/index.html","searchKeys":["PCSCError","data class PCSCError : Throwable","au.id.micolous.kotlin.pcsc.PCSCError"]},{"name":"data class ReaderState(reader: String, currentState: State, eventState: State, atr: ByteArray)","description":"au.id.micolous.kotlin.pcsc.ReaderState","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-reader-state/index.html","searchKeys":["ReaderState","data class ReaderState(reader: String, currentState: State, eventState: State, atr: ByteArray)","au.id.micolous.kotlin.pcsc.ReaderState"]},{"name":"data class State(ignore: Boolean, changed: Boolean, unknown: Boolean, unavailable: Boolean, empty: Boolean, present: Boolean, atrMatch: Boolean, exclusive: Boolean, inUse: Boolean, mute: Boolean, unpowered: Boolean)","description":"au.id.micolous.kotlin.pcsc.State","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/index.html","searchKeys":["State","data class State(ignore: Boolean, changed: Boolean, unknown: Boolean, unavailable: Boolean, empty: Boolean, present: Boolean, atrMatch: Boolean, exclusive: Boolean, inUse: Boolean, mute: Boolean, unpowered: Boolean)","au.id.micolous.kotlin.pcsc.State"]},{"name":"data class Version","description":"au.id.micolous.kotlin.pcsc.Version","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-version/index.html","searchKeys":["Version","data class Version","au.id.micolous.kotlin.pcsc.Version"]},{"name":"enum Attribute : Enum<Attribute> ","description":"au.id.micolous.kotlin.pcsc.Attribute","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/index.html","searchKeys":["Attribute","enum Attribute : Enum<Attribute> ","au.id.micolous.kotlin.pcsc.Attribute"]},{"name":"enum AttributeClass : Enum<AttributeClass> ","description":"au.id.micolous.kotlin.pcsc.AttributeClass","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/index.html","searchKeys":["AttributeClass","enum AttributeClass : Enum<AttributeClass> ","au.id.micolous.kotlin.pcsc.AttributeClass"]},{"name":"enum DisconnectDisposition : Enum<DisconnectDisposition> ","description":"au.id.micolous.kotlin.pcsc.DisconnectDisposition","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-disconnect-disposition/index.html","searchKeys":["DisconnectDisposition","enum DisconnectDisposition : Enum<DisconnectDisposition> ","au.id.micolous.kotlin.pcsc.DisconnectDisposition"]},{"name":"enum Initialization : Enum<Initialization> ","description":"au.id.micolous.kotlin.pcsc.Initialization","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-initialization/index.html","searchKeys":["Initialization","enum Initialization : Enum<Initialization> ","au.id.micolous.kotlin.pcsc.Initialization"]},{"name":"enum PCSCErrorCode : Enum<PCSCErrorCode> ","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/index.html","searchKeys":["PCSCErrorCode","enum PCSCErrorCode : Enum<PCSCErrorCode> ","au.id.micolous.kotlin.pcsc.PCSCErrorCode"]},{"name":"enum Protocol : Enum<Protocol> ","description":"au.id.micolous.kotlin.pcsc.Protocol","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-protocol/index.html","searchKeys":["Protocol","enum Protocol : Enum<Protocol> ","au.id.micolous.kotlin.pcsc.Protocol"]},{"name":"enum Scope : Enum<Scope> ","description":"au.id.micolous.kotlin.pcsc.Scope","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-scope/index.html","searchKeys":["Scope","enum Scope : Enum<Scope> ","au.id.micolous.kotlin.pcsc.Scope"]},{"name":"enum ShareMode : Enum<ShareMode> ","description":"au.id.micolous.kotlin.pcsc.ShareMode","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-share-mode/index.html","searchKeys":["ShareMode","enum ShareMode : Enum<ShareMode> ","au.id.micolous.kotlin.pcsc.ShareMode"]},{"name":"fun Card.control(controlCode: Long, sendBuffer: ByteArray? = null)","description":"au.id.micolous.kotlin.pcsc.control","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/control.html","searchKeys":["control","fun Card.control(controlCode: Long, sendBuffer: ByteArray? = null)","au.id.micolous.kotlin.pcsc.control"]},{"name":"fun Card.getAttrib(attribute: Attribute): ByteArray?","description":"au.id.micolous.kotlin.pcsc.getAttrib","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-attrib.html","searchKeys":["getAttrib","fun Card.getAttrib(attribute: Attribute): ByteArray?","au.id.micolous.kotlin.pcsc.getAttrib"]},{"name":"fun Card.getAttrib(cls: AttributeClass, tag: Int): ByteArray?","description":"au.id.micolous.kotlin.pcsc.getAttrib","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-attrib.html","searchKeys":["getAttrib","fun Card.getAttrib(cls: AttributeClass, tag: Int): ByteArray?","au.id.micolous.kotlin.pcsc.getAttrib"]},{"name":"fun Card.getAttrib(cls: Int, tag: Int): ByteArray?","description":"au.id.micolous.kotlin.pcsc.getAttrib","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-attrib.html","searchKeys":["getAttrib","fun Card.getAttrib(cls: Int, tag: Int): ByteArray?","au.id.micolous.kotlin.pcsc.getAttrib"]},{"name":"fun Card.getIfdSerial(): String?","description":"au.id.micolous.kotlin.pcsc.getIfdSerial","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-ifd-serial.html","searchKeys":["getIfdSerial","fun Card.getIfdSerial(): String?","au.id.micolous.kotlin.pcsc.getIfdSerial"]},{"name":"fun Card.getIfdType(): String?","description":"au.id.micolous.kotlin.pcsc.getIfdType","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-ifd-type.html","searchKeys":["getIfdType","fun Card.getIfdType(): String?","au.id.micolous.kotlin.pcsc.getIfdType"]},{"name":"fun Card.getIfdVersion(): Version?","description":"au.id.micolous.kotlin.pcsc.getIfdVersion","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-ifd-version.html","searchKeys":["getIfdVersion","fun Card.getIfdVersion(): Version?","au.id.micolous.kotlin.pcsc.getIfdVersion"]},{"name":"fun Card.getMechanicalCharacteristics(): MechanicalCharacteristics?","description":"au.id.micolous.kotlin.pcsc.getMechanicalCharacteristics","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-mechanical-characteristics.html","searchKeys":["getMechanicalCharacteristics","fun Card.getMechanicalCharacteristics(): MechanicalCharacteristics?","au.id.micolous.kotlin.pcsc.getMechanicalCharacteristics"]},{"name":"fun Card.getVendorName(): String?","description":"au.id.micolous.kotlin.pcsc.getVendorName","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-vendor-name.html","searchKeys":["getVendorName","fun Card.getVendorName(): String?","au.id.micolous.kotlin.pcsc.getVendorName"]},{"name":"fun Card.reconnect(shareMode: ShareMode, preferredProtocol: Protocol = Protocol.Any, initialization: Initialization)","description":"au.id.micolous.kotlin.pcsc.reconnect","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/reconnect.html","searchKeys":["reconnect","fun Card.reconnect(shareMode: ShareMode, preferredProtocol: Protocol = Protocol.Any, initialization: Initialization)","au.id.micolous.kotlin.pcsc.reconnect"]},{"name":"fun Context.connect(reader: String, shareMode: ShareMode, preferredProtocol: Protocol = Protocol.Any): Card","description":"au.id.micolous.kotlin.pcsc.connect","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/connect.html","searchKeys":["connect","fun Context.connect(reader: String, shareMode: ShareMode, preferredProtocol: Protocol = Protocol.Any): Card","au.id.micolous.kotlin.pcsc.connect"]},{"name":"fun Context.getAllReaderStatus(groups: List<String>? = null): List<ReaderState>","description":"au.id.micolous.kotlin.pcsc.getAllReaderStatus","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-all-reader-status.html","searchKeys":["getAllReaderStatus","fun Context.getAllReaderStatus(groups: List<String>? = null): List<ReaderState>","au.id.micolous.kotlin.pcsc.getAllReaderStatus"]},{"name":"fun Context.getStatus(reader: String): ReaderState","description":"au.id.micolous.kotlin.pcsc.getStatus","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-status.html","searchKeys":["getStatus","fun Context.getStatus(reader: String): ReaderState","au.id.micolous.kotlin.pcsc.getStatus"]},{"name":"fun Context.getStatus(readers: List<String>): List<ReaderState>","description":"au.id.micolous.kotlin.pcsc.getStatus","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-status.html","searchKeys":["getStatus","fun Context.getStatus(readers: List<String>): List<ReaderState>","au.id.micolous.kotlin.pcsc.getStatus"]},{"name":"fun ReaderState(reader: String, currentState: State = State.UNAWARE, eventState: State = State.UNAWARE, atr: ByteArray = ByteArray(0))","description":"au.id.micolous.kotlin.pcsc.ReaderState.ReaderState","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-reader-state/-reader-state.html","searchKeys":["ReaderState","fun ReaderState(reader: String, currentState: State = State.UNAWARE, eventState: State = State.UNAWARE, atr: ByteArray = ByteArray(0))","au.id.micolous.kotlin.pcsc.ReaderState.ReaderState"]},{"name":"fun State(ignore: Boolean = false, changed: Boolean = false, unknown: Boolean = false, unavailable: Boolean = false, empty: Boolean = false, present: Boolean = false, atrMatch: Boolean = false, exclusive: Boolean = false, inUse: Boolean = false, mute: Boolean = false, unpowered: Boolean = false)","description":"au.id.micolous.kotlin.pcsc.State.State","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/-state.html","searchKeys":["State","fun State(ignore: Boolean = false, changed: Boolean = false, unknown: Boolean = false, unavailable: Boolean = false, empty: Boolean = false, present: Boolean = false, atrMatch: Boolean = false, exclusive: Boolean = false, inUse: Boolean = false, mute: Boolean = false, unpowered: Boolean = false)","au.id.micolous.kotlin.pcsc.State.State"]},{"name":"fun beginTransaction()","description":"au.id.micolous.kotlin.pcsc.Card.beginTransaction","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/begin-transaction.html","searchKeys":["beginTransaction","fun beginTransaction()","au.id.micolous.kotlin.pcsc.Card.beginTransaction"]},{"name":"fun cancel()","description":"au.id.micolous.kotlin.pcsc.Context.cancel","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/cancel.html","searchKeys":["cancel","fun cancel()","au.id.micolous.kotlin.pcsc.Context.cancel"]},{"name":"fun connect(reader: String, shareMode: ShareMode, preferredProtcols: Set<Protocol>?): Card","description":"au.id.micolous.kotlin.pcsc.Context.connect","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/connect.html","searchKeys":["connect","fun connect(reader: String, shareMode: ShareMode, preferredProtcols: Set<Protocol>?): Card","au.id.micolous.kotlin.pcsc.Context.connect"]},{"name":"fun control(controlCode: Long, sendBuffer: ByteArray? = null, recvBufferSize: Int = 0): ByteArray?","description":"au.id.micolous.kotlin.pcsc.Card.control","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/control.html","searchKeys":["control","fun control(controlCode: Long, sendBuffer: ByteArray? = null, recvBufferSize: Int = 0): ByteArray?","au.id.micolous.kotlin.pcsc.Card.control"]},{"name":"fun disconnect(disposition: DisconnectDisposition = DisconnectDisposition.Leave)","description":"au.id.micolous.kotlin.pcsc.Card.disconnect","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/disconnect.html","searchKeys":["disconnect","fun disconnect(disposition: DisconnectDisposition = DisconnectDisposition.Leave)","au.id.micolous.kotlin.pcsc.Card.disconnect"]},{"name":"fun endTransaction(disposition: DisconnectDisposition = DisconnectDisposition.Leave)","description":"au.id.micolous.kotlin.pcsc.Card.endTransaction","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/end-transaction.html","searchKeys":["endTransaction","fun endTransaction(disposition: DisconnectDisposition = DisconnectDisposition.Leave)","au.id.micolous.kotlin.pcsc.Card.endTransaction"]},{"name":"fun establish(scope: Scope = Scope.User): Context","description":"au.id.micolous.kotlin.pcsc.Context.Companion.establish","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/-companion/establish.html","searchKeys":["establish","fun establish(scope: Scope = Scope.User): Context","au.id.micolous.kotlin.pcsc.Context.Companion.establish"]},{"name":"fun getAttrib(attribute: Long): ByteArray?","description":"au.id.micolous.kotlin.pcsc.Card.getAttrib","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/get-attrib.html","searchKeys":["getAttrib","fun getAttrib(attribute: Long): ByteArray?","au.id.micolous.kotlin.pcsc.Card.getAttrib"]},{"name":"fun isValid(): Boolean","description":"au.id.micolous.kotlin.pcsc.Context.isValid","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/is-valid.html","searchKeys":["isValid","fun isValid(): Boolean","au.id.micolous.kotlin.pcsc.Context.isValid"]},{"name":"fun listReaders(groups: List<String>? = null): List<String>","description":"au.id.micolous.kotlin.pcsc.Context.listReaders","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/list-readers.html","searchKeys":["listReaders","fun listReaders(groups: List<String>? = null): List<String>","au.id.micolous.kotlin.pcsc.Context.listReaders"]},{"name":"fun reconnect(shareMode: ShareMode, preferredProtcols: Set<Protocol>?, initialization: Initialization)","description":"au.id.micolous.kotlin.pcsc.Card.reconnect","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/reconnect.html","searchKeys":["reconnect","fun reconnect(shareMode: ShareMode, preferredProtcols: Set<Protocol>?, initialization: Initialization)","au.id.micolous.kotlin.pcsc.Card.reconnect"]},{"name":"fun release()","description":"au.id.micolous.kotlin.pcsc.Context.release","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/release.html","searchKeys":["release","fun release()","au.id.micolous.kotlin.pcsc.Context.release"]},{"name":"fun status(): CardStatus","description":"au.id.micolous.kotlin.pcsc.Card.status","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/status.html","searchKeys":["status","fun status(): CardStatus","au.id.micolous.kotlin.pcsc.Card.status"]},{"name":"fun transmit(buffer: ByteArray): ByteArray","description":"au.id.micolous.kotlin.pcsc.Card.transmit","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/transmit.html","searchKeys":["transmit","fun transmit(buffer: ByteArray): ByteArray","au.id.micolous.kotlin.pcsc.Card.transmit"]},{"name":"fun update(): ReaderState","description":"au.id.micolous.kotlin.pcsc.ReaderState.update","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-reader-state/update.html","searchKeys":["update","fun update(): ReaderState","au.id.micolous.kotlin.pcsc.ReaderState.update"]},{"name":"object Companion","description":"au.id.micolous.kotlin.pcsc.Context.Companion","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/-companion/index.html","searchKeys":["Companion","object Companion","au.id.micolous.kotlin.pcsc.Context.Companion"]},{"name":"object Companion","description":"au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.Companion","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-mechanical-characteristics/-companion/index.html","searchKeys":["Companion","object Companion","au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.Companion"]},{"name":"object Companion","description":"au.id.micolous.kotlin.pcsc.PCSCError.Companion","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error/-companion/index.html","searchKeys":["Companion","object Companion","au.id.micolous.kotlin.pcsc.PCSCError.Companion"]},{"name":"object Companion","description":"au.id.micolous.kotlin.pcsc.State.Companion","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/-companion/index.html","searchKeys":["Companion","object Companion","au.id.micolous.kotlin.pcsc.State.Companion"]},{"name":"object Companion","description":"au.id.micolous.kotlin.pcsc.Version.Companion","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-version/-companion/index.html","searchKeys":["Companion","object Companion","au.id.micolous.kotlin.pcsc.Version.Companion"]},{"name":"open override fun toString(): String","description":"au.id.micolous.kotlin.pcsc.PCSCError.toString","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error/to-string.html","searchKeys":["toString","open override fun toString(): String","au.id.micolous.kotlin.pcsc.PCSCError.toString"]},{"name":"open override fun toString(): String","description":"au.id.micolous.kotlin.pcsc.Version.toString","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","au.id.micolous.kotlin.pcsc.Version.toString"]},{"name":"open override val message: String","description":"au.id.micolous.kotlin.pcsc.PCSCError.message","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error/message.html","searchKeys":["message","open override val message: String","au.id.micolous.kotlin.pcsc.PCSCError.message"]},{"name":"suspend fun Context.getStatusChange(timeout: Int, reader: ReaderState): ReaderState","description":"au.id.micolous.kotlin.pcsc.getStatusChange","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/get-status-change.html","searchKeys":["getStatusChange","suspend fun Context.getStatusChange(timeout: Int, reader: ReaderState): ReaderState","au.id.micolous.kotlin.pcsc.getStatusChange"]},{"name":"suspend fun getStatusChange(timeout: Int, readers: List<ReaderState>): List<ReaderState>","description":"au.id.micolous.kotlin.pcsc.Context.getStatusChange","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-context/get-status-change.html","searchKeys":["getStatusChange","suspend fun getStatusChange(timeout: Int, readers: List<ReaderState>): List<ReaderState>","au.id.micolous.kotlin.pcsc.Context.getStatusChange"]},{"name":"val UNAWARE: State","description":"au.id.micolous.kotlin.pcsc.State.Companion.UNAWARE","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/-companion/-u-n-a-w-a-r-e.html","searchKeys":["UNAWARE","val UNAWARE: State","au.id.micolous.kotlin.pcsc.State.Companion.UNAWARE"]},{"name":"val absent: Boolean = false","description":"au.id.micolous.kotlin.pcsc.CardStatus.absent","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/absent.html","searchKeys":["absent","val absent: Boolean = false","au.id.micolous.kotlin.pcsc.CardStatus.absent"]},{"name":"val atr: ByteArray","description":"au.id.micolous.kotlin.pcsc.CardStatus.atr","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/atr.html","searchKeys":["atr","val atr: ByteArray","au.id.micolous.kotlin.pcsc.CardStatus.atr"]},{"name":"val atr: ByteArray","description":"au.id.micolous.kotlin.pcsc.ReaderState.atr","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-reader-state/atr.html","searchKeys":["atr","val atr: ByteArray","au.id.micolous.kotlin.pcsc.ReaderState.atr"]},{"name":"val atrMatch: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.atrMatch","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/atr-match.html","searchKeys":["atrMatch","val atrMatch: Boolean = false","au.id.micolous.kotlin.pcsc.State.atrMatch"]},{"name":"val build: Int","description":"au.id.micolous.kotlin.pcsc.Version.build","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-version/build.html","searchKeys":["build","val build: Int","au.id.micolous.kotlin.pcsc.Version.build"]},{"name":"val cardCapture: Boolean","description":"au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.cardCapture","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-mechanical-characteristics/card-capture.html","searchKeys":["cardCapture","val cardCapture: Boolean","au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.cardCapture"]},{"name":"val cardEjection: Boolean","description":"au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.cardEjection","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-mechanical-characteristics/card-ejection.html","searchKeys":["cardEjection","val cardEjection: Boolean","au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.cardEjection"]},{"name":"val cardSwallowing: Boolean","description":"au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.cardSwallowing","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-mechanical-characteristics/card-swallowing.html","searchKeys":["cardSwallowing","val cardSwallowing: Boolean","au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.cardSwallowing"]},{"name":"val changed: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.changed","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/changed.html","searchKeys":["changed","val changed: Boolean = false","au.id.micolous.kotlin.pcsc.State.changed"]},{"name":"val cls: AttributeClass","description":"au.id.micolous.kotlin.pcsc.Attribute.cls","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/cls.html","searchKeys":["cls","val cls: AttributeClass","au.id.micolous.kotlin.pcsc.Attribute.cls"]},{"name":"val code: Long","description":"au.id.micolous.kotlin.pcsc.PCSCError.code","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error/code.html","searchKeys":["code","val code: Long","au.id.micolous.kotlin.pcsc.PCSCError.code"]},{"name":"val code: Long","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.code","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/code.html","searchKeys":["code","val code: Long","au.id.micolous.kotlin.pcsc.PCSCErrorCode.code"]},{"name":"val contactless: Boolean","description":"au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.contactless","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-mechanical-characteristics/contactless.html","searchKeys":["contactless","val contactless: Boolean","au.id.micolous.kotlin.pcsc.MechanicalCharacteristics.contactless"]},{"name":"val currentState: State","description":"au.id.micolous.kotlin.pcsc.ReaderState.currentState","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-reader-state/current-state.html","searchKeys":["currentState","val currentState: State","au.id.micolous.kotlin.pcsc.ReaderState.currentState"]},{"name":"val description: String","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.description","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/description.html","searchKeys":["description","val description: String","au.id.micolous.kotlin.pcsc.PCSCErrorCode.description"]},{"name":"val empty: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.empty","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/empty.html","searchKeys":["empty","val empty: Boolean = false","au.id.micolous.kotlin.pcsc.State.empty"]},{"name":"val error: PCSCErrorCode?","description":"au.id.micolous.kotlin.pcsc.PCSCError.error","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error/error.html","searchKeys":["error","val error: PCSCErrorCode?","au.id.micolous.kotlin.pcsc.PCSCError.error"]},{"name":"val eventState: State","description":"au.id.micolous.kotlin.pcsc.ReaderState.eventState","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-reader-state/event-state.html","searchKeys":["eventState","val eventState: State","au.id.micolous.kotlin.pcsc.ReaderState.eventState"]},{"name":"val exclusive: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.exclusive","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/exclusive.html","searchKeys":["exclusive","val exclusive: Boolean = false","au.id.micolous.kotlin.pcsc.State.exclusive"]},{"name":"val ignore: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.ignore","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/ignore.html","searchKeys":["ignore","val ignore: Boolean = false","au.id.micolous.kotlin.pcsc.State.ignore"]},{"name":"val inUse: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.inUse","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/in-use.html","searchKeys":["inUse","val inUse: Boolean = false","au.id.micolous.kotlin.pcsc.State.inUse"]},{"name":"val major: Int","description":"au.id.micolous.kotlin.pcsc.Version.major","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-version/major.html","searchKeys":["major","val major: Int","au.id.micolous.kotlin.pcsc.Version.major"]},{"name":"val message: String","description":"au.id.micolous.kotlin.pcsc.PCSCErrorCode.message","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-p-c-s-c-error-code/message.html","searchKeys":["message","val message: String","au.id.micolous.kotlin.pcsc.PCSCErrorCode.message"]},{"name":"val minor: Int","description":"au.id.micolous.kotlin.pcsc.Version.minor","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-version/minor.html","searchKeys":["minor","val minor: Int","au.id.micolous.kotlin.pcsc.Version.minor"]},{"name":"val mute: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.mute","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/mute.html","searchKeys":["mute","val mute: Boolean = false","au.id.micolous.kotlin.pcsc.State.mute"]},{"name":"val negotiable: Boolean = false","description":"au.id.micolous.kotlin.pcsc.CardStatus.negotiable","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/negotiable.html","searchKeys":["negotiable","val negotiable: Boolean = false","au.id.micolous.kotlin.pcsc.CardStatus.negotiable"]},{"name":"val num: Long","description":"au.id.micolous.kotlin.pcsc.Attribute.num","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/num.html","searchKeys":["num","val num: Long","au.id.micolous.kotlin.pcsc.Attribute.num"]},{"name":"val powered: Boolean = false","description":"au.id.micolous.kotlin.pcsc.CardStatus.powered","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/powered.html","searchKeys":["powered","val powered: Boolean = false","au.id.micolous.kotlin.pcsc.CardStatus.powered"]},{"name":"val present: Boolean = false","description":"au.id.micolous.kotlin.pcsc.CardStatus.present","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/present.html","searchKeys":["present","val present: Boolean = false","au.id.micolous.kotlin.pcsc.CardStatus.present"]},{"name":"val present: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.present","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/present.html","searchKeys":["present","val present: Boolean = false","au.id.micolous.kotlin.pcsc.State.present"]},{"name":"val protocol: Protocol?","description":"au.id.micolous.kotlin.pcsc.CardStatus.protocol","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/protocol.html","searchKeys":["protocol","val protocol: Protocol?","au.id.micolous.kotlin.pcsc.CardStatus.protocol"]},{"name":"val reader: String","description":"au.id.micolous.kotlin.pcsc.ReaderState.reader","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-reader-state/reader.html","searchKeys":["reader","val reader: String","au.id.micolous.kotlin.pcsc.ReaderState.reader"]},{"name":"val readerName: String?","description":"au.id.micolous.kotlin.pcsc.CardStatus.readerName","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/reader-name.html","searchKeys":["readerName","val readerName: String?","au.id.micolous.kotlin.pcsc.CardStatus.readerName"]},{"name":"val readerNames: List<String>","description":"au.id.micolous.kotlin.pcsc.CardStatus.readerNames","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/reader-names.html","searchKeys":["readerNames","val readerNames: List<String>","au.id.micolous.kotlin.pcsc.CardStatus.readerNames"]},{"name":"val specific: Boolean = false","description":"au.id.micolous.kotlin.pcsc.CardStatus.specific","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/specific.html","searchKeys":["specific","val specific: Boolean = false","au.id.micolous.kotlin.pcsc.CardStatus.specific"]},{"name":"val swallowed: Boolean = false","description":"au.id.micolous.kotlin.pcsc.CardStatus.swallowed","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/swallowed.html","searchKeys":["swallowed","val swallowed: Boolean = false","au.id.micolous.kotlin.pcsc.CardStatus.swallowed"]},{"name":"val tag: Int","description":"au.id.micolous.kotlin.pcsc.Attribute.tag","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute/tag.html","searchKeys":["tag","val tag: Int","au.id.micolous.kotlin.pcsc.Attribute.tag"]},{"name":"val unavailable: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.unavailable","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/unavailable.html","searchKeys":["unavailable","val unavailable: Boolean = false","au.id.micolous.kotlin.pcsc.State.unavailable"]},{"name":"val unaware: Boolean","description":"au.id.micolous.kotlin.pcsc.State.unaware","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/unaware.html","searchKeys":["unaware","val unaware: Boolean","au.id.micolous.kotlin.pcsc.State.unaware"]},{"name":"val unknown: Boolean = false","description":"au.id.micolous.kotlin.pcsc.CardStatus.unknown","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card-status/unknown.html","searchKeys":["unknown","val unknown: Boolean = false","au.id.micolous.kotlin.pcsc.CardStatus.unknown"]},{"name":"val unknown: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.unknown","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/unknown.html","searchKeys":["unknown","val unknown: Boolean = false","au.id.micolous.kotlin.pcsc.State.unknown"]},{"name":"val unpowered: Boolean = false","description":"au.id.micolous.kotlin.pcsc.State.unpowered","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-state/unpowered.html","searchKeys":["unpowered","val unpowered: Boolean = false","au.id.micolous.kotlin.pcsc.State.unpowered"]},{"name":"val v: Int","description":"au.id.micolous.kotlin.pcsc.AttributeClass.v","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-attribute-class/v.html","searchKeys":["v","val v: Int","au.id.micolous.kotlin.pcsc.AttributeClass.v"]},{"name":"var protocol: Protocol?","description":"au.id.micolous.kotlin.pcsc.Card.protocol","location":"kotlin-pcsc/au.id.micolous.kotlin.pcsc/-card/protocol.html","searchKeys":["protocol","var protocol: Protocol?","au.id.micolous.kotlin.pcsc.Card.protocol"]}]
